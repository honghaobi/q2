CREATE TABLE owners (owner_id SERIAL PRIMARY KEY, name TEXT, age INT);

CREATE TABLE properties (property_id SERIAL PRIMARY KEY, name TEXT, number_of_units INT, owner_id INT REFERENCES owners(owner_id));

1. Show all the tables.

\dt;

2. Show all the users.

\du;

3. Show all the data in the owners table.

SELECT * FROM owners;

4. Show the names of all owners.

SELECT name FROM owners;

5. Show the ages of all of the owners in ascending order.

SELECT age FROM owners ORDER BY age ASC;

6. Show the name of an owner whose name is Mary.

SELECT name FROM owners WHERE name=Mary;

7. Show the age of all owners who are older than 30.

SELECT age FROM owners WHERE age>=30;

8. Show the name of all owners whose name starts with an E.

SELECT name FROM owners WHERE name LIKE 'E%';

9. Add an owner named John who is 33 years old to the owners table.

INSERT INTO owners (name, age) VALUES ('John', 33);

10. Add an owner named Jane who is 43 years old to the owners table.

INSERT INTO owners (name, age) VALUES ('Jane', 43);

11. Change Jane's age to 30.

UPDATE owners set age=30 WHERE name=Jane;

12. Change Jane's name to Janet.

UPDATE owners set name=Janet WHERE name=Jane;

13. Add a property named Archstone that has 20 units.

INSERT INTO properties (name, number_of_units, owner_id) VALUES ('Archstone', 20, 2);

14. Delete the owner named Janet.

UPDATE owners WHERE name=Jane;

15. Show all of the properties in alphabetical order that are not named Archstone and do not have an id of 3 or 5.

SELECT * FROM properties WHERE name!=Archstone AND id!=3 AND id!=5 ORDER name ASC;

16. Count the total number of rows in the properties table.

SELECT COUNT(*) FROM properties;

17. Show the highest age of all owners.

SELECT age FROM owners ORDER BY age ASC LIMIT 1;

18. Show the names of the first three owners in your owners table.

SELECT name FROM owners ORDER BY owner_id ASC LIMIT 3;

19. Create a foreign key that references the owner_id in the owners table and forces the constraint ON DELETE CASCADE.

CREATE TABLE owners(owner_id INT REFERENCES owners(owner_id) ON DELETE CASCADE);

20. Show all of the information from the owners table and the properties table in one joined table.

SELECT * FROM owners FULL OUTER JOIN properties ON owners.owner_id = properties.owner_id;


```
Bonus (this might require you to look up documentation online)

```
1. In the properties table change the name of the column "name" to "property_name".

ALTER TABLE properties RENAME COLUMN name TO property_name;

2. Count the total number of properties where the owner_id is between 1 and 3.

COUNT * FROM properties owner_id >= 1 AND owner_id <= 3;

3. Delete the owners table - what happens? why?

DELETE TABLE owners;
TRUNCATE TABLE owners;

```
